---
title: "Cohort Revenue & Retention Analysis: A Bayesian Approach"
subtitle: PyData Berlin - July 2023
author: 
  - name: Dr. Juan Orduz
    url: https://juanitorduz.github.io/
    affiliations:
      - name: Mathematician & Data Scientist
format:
  revealjs:
    logo: images/revenue_retention_presentation_files/juanitorduz_logo.gif
    transition: none
    slide-number: true
    chalkboard: 
      buttons: false
    preview-links: auto
    theme:
        - white
    highlight-style: github-dark
    footer: '<a href="https://juanitorduz.github.io/revenue_retention/">Cohort Revenue & Retention Analysis: A Bayesian Approach</a>'
---

## Outline

::: incremental

1. Introduction

2. Bottom-Up Approaches

    2.1 Shifted Beta Geometric (Contractual)

    2.2 BG/NBD Model (Non-Contractual)

3. Simple Cohort Retention Model (GLM)

4. Retention Model with BART

5. Cohort Revenue-Retention Model

6. Applications

7. References

:::

---

## Business Problem

### Example

::: incremental

- During January $2020$, $100$ users signed up for a service (cohort).

- In February $2020$, there were $17$ users from the $2020-01$ cohort active (e.g. did at least one purchase). The retention rate is $17\%$.

- We want to understand and predict how retention develops over time.

- The main motivation is to estimate customer lifetime value (CLV).

:::


## Number of Active Users

![](images/revenue_retention_presentation_files/retention_files/retention_11_1.png){fig-align="center"}

::: footer
[A Simple Cohort Retention Analysis in PyMC](https://juanitorduz.github.io/retention/)
:::

## Retention Matrix

![](images/revenue_retention_presentation_files/retention_files/retention_14_1.png){fig-align="center"}

::: footer
[A Simple Cohort Retention Analysis in PyMC](https://juanitorduz.github.io/retention/)
:::

## Bottom-Up Approaches {.smaller}

Predict the retention of each user individually and then aggregate the results.

### Example: Shifted Beta Geometric (Contractual)

::: incremental

1. An individual remains a customer of the company with constant retention probability $1 - \theta$.
This is equivalent to assuming that the duration of the customer’s relationship with the company, denoted by the random
variable $T$, is characterized by the (shifted) geometric distribution with probability mass function and survivor
function given by

    $$f(t) = \theta (1 - \theta)^{t - 1}, \quad t = 1, 2, \ldots$$

    $$S(t) = \sum_{j = t}^{\infty} f(j) = (1 - \theta)^{t - 1}, \quad t = 1, 2, \ldots$$

1. Heterogeneity in $\theta$ follows a beta distribution $\theta \sim \text{Beta}(a, b)$.

:::

::: footer
See [How to Project Customer Retention](https://www.brucehardie.com/notes/025/)
:::

## Shifted Beta Geometric - Survival Function

![](images/revenue_retention_presentation_files/sBG_survival.png){fig-align="center"}

::: footer
See [`pymc-marketing`](https://www.pymc-marketing.io/en/stable/) example [here](https://www.pymc-marketing.io/en/latest/notebooks/clv/sBG.html).
:::

## Bottom-Up Approaches {.smaller}

### Example: BG/NBD Model (Non-Contractual)

::: incremental

1. While active, the time between transactions is distributed exponentially with transaction rate, i.e., 

    $$f(t_{j}|t_{j-1}; \lambda) = \lambda \exp(-\lambda (t_{j} - t_{j - 1})), \quad t_{j} \geq t_{j - 1} \geq 0$$ 

2. Heterogeneity in $\lambda$ follows a gamma distribution $\lambda \sim \text{Gamma}(r, \alpha)$.

3. After any transaction, a customer becomes inactive with probability $p$.

4. Heterogeneity in $p$ follows a beta distribution $p \sim \text{Beta}(a, b)$.

5. The transaction rate $\lambda$ and the dropout probability $p$ vary independently across customers.
:::

::: footer
See [“Counting Your Customers” the Easy Way: An Alternative to the Pareto/NBD Model](http://brucehardie.com/papers/018/fader_et_al_mksc_05.pdf)
:::

## BG/NBD - Probability of Alive 

![](images/revenue_retention_presentation_files/p_alive.png){fig-align="center"}

::: footer
See [`pymc-marketing`](https://github.com/pymc-labs/pymc-marketing): [CLV Quickstart](https://www.pymc-marketing.io/en/stable/notebooks/clv/clv_quickstart.html)
:::

## Retention Matrix {.smaller}

![](images/revenue_retention_presentation_files/retention_files/retention_14_1.png){fig-align="center"}

- **Cohort Age:** Age of the cohort in months.
- **Age:** Age of the cohort with respect to the observation time.
- **Month:** Month of the observation time (period).

## Retention Over Time (period)

![](images/revenue_retention_presentation_files/retention_files/retention_15_1.png){fig-align="center"}


## Retention - Generalized Linear Model

\begin{align*}
N_{\text{active}} \sim & \: \text{Binomial}(N_{\text{total}}, p) \\
\textrm{logit}(p) = & \: ( \text{intercept} \\
    & + \beta_{\text{cohort age}} \text{cohort age} \\
    & + \beta_{\text{age}} \text{age} \\
    & + \beta_{\text{cohort age} \times \text{age}} \text{cohort age} \times \text{age} \\
    & + \beta_{\text{seasonality}} \text{seasonality} )
\end{align*}

where $p$ represents the **retention** and $\text{logit}: (0, 1) \longrightarrow \mathbb{R}$ is defined by $\text{logit}(p) = \log\left(\frac{p}{1-p}\right)$.


::: footer
[A Simple Cohort Retention Analysis in PyMC](https://juanitorduz.github.io/retention/)
:::

## Retention - GLM in PyMC

![](images/revenue_retention_presentation_files/retention_files/retention_27_0.svg){fig-align="center"}


::: footer
[A Simple Cohort Retention Analysis in PyMC](https://juanitorduz.github.io/retention/)
:::

## Retention - GLM in PyMC

``` {.python code-line-numbers="|1|2-18|20-31|33-44|46-53"}
with pm.Model(coords=coords) as model:
    # --- Data ---
    model.add_coord(name="obs", values=train_obs_idx, mutable=True)
    age_scaled = pm.MutableData(
        name="age_scaled", value=train_age_scaled, dims="obs"
    )
    cohort_age_scaled = pm.MutableData(
        name="cohort_age_scaled", value=train_cohort_age_scaled, dims="obs"
    )
    period_month_idx = pm.MutableData(
        name="period_month_idx", value=train_period_month_idx, dims="obs"
    )
    n_users = pm.MutableData(
        name="n_users", value=train_n_users, dims="obs"
    )
    n_active_users = pm.MutableData(
        name="n_active_users", value=train_n_active_users, dims="obs"
    )

    # --- Priors ---
    intercept = pm.Normal(name="intercept", mu=0, sigma=1)
    b_age_scaled = pm.Normal(name="b_age_scaled", mu=0, sigma=1)
    b_cohort_age_scaled = pm.Normal(
        name="b_cohort_age_scaled", mu=0, sigma=1
    )
    b_period_month = pm.ZeroSumNormal(
        name="b_period_month", sigma=1, dims="period_month"
    )
    b_age_cohort_age_interaction = pm.Normal(
        name="b_age_cohort_age_interaction", mu=0, sigma=1
    )

    # --- Parametrization ---
    mu = pm.Deterministic(
        name="mu",
        var=intercept
        + b_age_scaled * age_scaled
        + b_cohort_age_scaled * cohort_age_scaled
        + b_age_cohort_age_interaction * age_scaled * cohort_age_scaled
        + b_period_month[period_month_idx],
        dims="obs",
    )

    p = pm.Deterministic(name="p", var=pm.math.invlogit(mu), dims="obs")

    # --- Likelihood ---
    pm.Binomial(
        name="likelihood",
        n=n_users,
        p=p,
        observed=n_active_users,
        dims="obs",
    )
```

::: footer
[A Simple Cohort Retention Analysis in PyMC](https://juanitorduz.github.io/retention/)
:::

## Posterior Distribution

![](images/revenue_retention_presentation_files/retention_files/retention_33_1.png){fig-align="center"}


::: footer
[A Simple Cohort Retention Analysis in PyMC](https://juanitorduz.github.io/retention/)
:::

## Posterior Predictive Check

![](images/revenue_retention_presentation_files/retention_files/retention_36_1.png){fig-align="center"}


::: footer
[A Simple Cohort Retention Analysis in PyMC](https://juanitorduz.github.io/retention/)
:::

## In-Sample Predictions

![](images/revenue_retention_presentation_files/retention_files/retention_40_1.png){fig-align="center"}


::: footer
[A Simple Cohort Retention Analysis in PyMC](https://juanitorduz.github.io/retention/)
:::

## Out-of-Sample Predictions

![](images/revenue_retention_presentation_files/retention_files/retention_50_1.png){fig-align="center"}


::: footer
[A Simple Cohort Retention Analysis in PyMC](https://juanitorduz.github.io/retention/)
:::

---

## More Complex Models - Requirements

::: incremental

- In many real-world scenarios, the **data is more complex** and the linear model is not enough.
We need a more flexible model that can capture **non-linearities and interactions**.

- We care about **uncertainty**.

- We want to be able to **iterate fast**.

- Interested in **out-of-sample predictions**. 

- **We want to couple retention modeling with revenue modeling (CLV)**.

:::

::: footer
:::

## Bayesian Additive Regression Trees

::: incremental

- Bayesian **"sum-of-trees”** model where each tree is constrained by a regularization prior to be a weak learner.

- To fit the sum-of-trees model, BART uses a tailored version of Bayesian backfitting MCMC that **iteratively constructs and fits successive residuals**.

- BART depends on the **number of trees** $m\in \mathbb{N}$ and **prior parameters** $\alpha \in (0, 1)$ and $\beta \in [0, \infty)$ so that the probability that a node at depth $d \in \mathbb{N}_{0}$ is nonterminal is 
$\alpha(1 + d)^{-\beta}$.

- BART is implemented in [`pymc-bart`](https://github.com/pymc-devs/pymc-bart).
:::

::: footer
[BART: Bayesian additive regression trees](https://projecteuclid.org/journals/annals-of-applied-statistics/volume-4/issue-1/BART-Bayesian-additive-regression-trees/10.1214/09-AOAS285.full)
:::

## BART Retention Model


::: columns
::: {.column width="70%"}
\begin{align*}
N_{\text{active}} & \sim \text{Binomial}(N_{\text{total}}, p) \\
\textrm{logit}(p) & = \text{BART}(\text{cohort age}, \text{age}, \text{month})
\end{align*}

``` {.python}
import pymc as pm
import pymc_bart as pmb

with pm.Model() as model
    ...
    mu = pmb.BART(
            name="mu",
            X=x,
            Y=train_retention_logit,
            m=100,
            response="mix",
            dims="obs",
        )
    ...
```

:::
::: {.column width="30%"}
![](images/revenue_retention_presentation_files/retention_bart_files/retention_bart_17_1.svg){.absolute top=0 right=0 width=300 height=700}
:::
:::

::: footer
[Cohort Retention Analysis with BART](https://juanitorduz.github.io/retention_bart/)
:::

## PDP Plot

![](images/revenue_retention_presentation_files/retention_bart_files/retention_bart_31_2.png){fig-align="center"}

::: footer
[Cohort Retention Analysis with BART](https://juanitorduz.github.io/retention_bart/)
:::

## ICE Plot

![](images/revenue_retention_presentation_files/retention_bart_files/retention_bart_32_1.png){fig-align="center"}

::: footer
[Cohort Retention Analysis with BART](https://juanitorduz.github.io/retention_bart/)
:::

---

## Revenue

![](images/revenue_retention_presentation_files/revenue_retention_files/revenue_retention_23_1.png){fig-align="center"}

<!-- ## Revenue per User (cohort)

![](images/revenue_retention_presentation_files/revenue_retention_files/revenue_retention_27_1.png){fig-align="center"}

## Revenue per Active User

![](images/revenue_retention_presentation_files/revenue_retention_files/revenue_retention_25_1.png){fig-align="center"} -->


## Cohort Revenue-Retention Model

```{mermaid}
%%| fig-height: 6
%%| fig-width: 10
%%| fig-align: "center"
%%{init: {"theme": "white", "themeVariables": {"fontSize": "48px"}, "flowchart":{"htmlLabels":false}}}%%
flowchart TD
  N[Number of Users] --> N_active[Number of Active Users]
  N_active --> Retention[Retention]
  Retention --> Revenue[Revenue]
```

##

### Retention Component

\begin{align*}
    \textrm{logit}(p) & = \text{BART}(\text{cohort age}, \text{age}, \text{month}) \\
    N_{\text{active}} & \sim \text{Binomial}(N_{\text{total}}, p)
\end{align*}

### Revenue Component

\begin{align*}
    \log(\lambda) = \: (& \text{intercept} \\
        & + \beta_{\text{cohort age}} \text{cohort age} \\
        & + \beta_{\text{age}} \text{age} \\
        & + \beta_{\text{cohort age} \times \text{age}} \text{cohort age} \times \text{age}) \\
    \text{Revenue} & \sim \text{Gamma}(N_{\text{active}}, \lambda)
\end{align*}


## Cohot Revenue-Retention Model

``` {.python code-line-numbers="|1-5|7-16|18-32"}
mu = pmb.BART(
    name="mu", X=x, Y=train_retention_logit, m=100, response="mix", dims="obs"
)

p = pm.Deterministic(name="p", var=pm.math.invlogit(mu), dims="obs")

lam_log = pm.Deterministic(
    name="lam_log",
    var=intercept
    + b_age_scaled * age_scaled
    + b_cohort_age_scaled * cohort_age_scaled
    + b_age_cohort_age_interaction * age_scaled * cohort_age_scaled,
    dims="obs",
)

lam = pm.Deterministic(name="lam", var=pm.math.exp(lam_log), dims="obs")

n_active_users_estimated = pm.Binomial(
    name="n_active_users_estimated",
    n=n_users,
    p=p,
    observed=n_active_users,
    dims="obs",
)

x = pm.Gamma(
    name="revenue_estimated",
    alpha=n_active_users_estimated + eps,
    beta=lam,
    observed=revenue,
    dims="obs",
)
```

## Cohort Revenue-Retention Model

![](images/revenue_retention_presentation_files/revenue_retention_files/revenue_retention_33_1.svg){fig-align="center"}


##  Revenue-Retention - Predictions

::: columns
::: {.column width="50%"}
![](images/revenue_retention_presentation_files/revenue_retention_files/revenue_retention_66_1.png){fig-align="center"}
:::
::: {.column width="50%"}
![](images/revenue_retention_presentation_files/revenue_retention_files/revenue_retention_68_1.png){fig-align="center"}
:::
:::

::: footer
:::

## Some Applications in the Industry

::: incremental

- Understand retention and revenue drivers.

    - Factor out seasonality.

    - External covariates (e.g. acquisition channel).

- Forecast revenue and retention (cohort lifetime value).

- Causal Inference

    - Counterfactural analysis.
    
    - Geo experiments. 

:::

::: footer
:::

## References {.smaller}

### Blog Posts

- [A Simple Cohort Retention Analysis in PyMC](https://juanitorduz.github.io/retention/)

- [Cohort Retention Analysis with BART](https://juanitorduz.github.io/retention_bart/)

- [Cohort Revenue & Retention Analysis: A Bayesian Approach](https://juanitorduz.github.io/revenue_retention/)

### Packages

- [`pymc`](https://github.com/pymc-devs/pymc)
- [`pymc-bart`](https://github.com/pymc-devs/pymc-bart)

### Papers

- [BART: Bayesian additive regression trees](https://projecteuclid.org/journals/annals-of-applied-statistics/volume-4/issue-1/BART-Bayesian-additive-regression-trees/10.1214/09-AOAS285.full)
- [Bayesian additive regression trees for probabilistic programming](https://arxiv.org/abs/2206.03619)

::: footer
:::

## References {.smaller}

### Related Work

- [Probability Models for Customer-Base Analysis](https://www.brucehardie.com/talks/ho_cba_tut_art_09.pdf)

- [“Counting Your Customers” the Easy Way: An Alternative to the Pareto/NBD Model](http://brucehardie.com/papers/018/fader_et_al_mksc_05.pdf), see [`pymc-marketing`](https://www.pymc-marketing.io/en/stable/) example [here](https://www.pymc-marketing.io/en/stable/notebooks/clv/bg_nbd.html).

- [BG/NBD Model in PyMC](https://juanitorduz.github.io/bg_nbd_pymc/)

- [How to Project Customer Retention](https://www.brucehardie.com/notes/025/), see [`pymc-marketing`](https://www.pymc-marketing.io/en/stable/) example [here](https://www.pymc-marketing.io/en/latest/notebooks/clv/sBG.html).

- [Fitting the sBG Model to Multi-Cohort Data](http://www.brucehardie.com/notes/017/sBG_estimation.pdf)

- [Beta Survival Models](https://proceedings.mlr.press/v146/hubbard21a.html)

::: footer
:::

##  Open Source Packages

::: rows
::: {.row width="30%"}
![](images/revenue_retention_presentation_files/pymc_bart.png){fig-align="center"}
:::
::: {.row width="70%"}
![](images/revenue_retention_presentation_files/pymc_marketing.png){fig-align="center"}
:::
:::

::: footer
:::

## Thank you!

[juanitorduz.github.io](https://juanitorduz.github.io/)

![](images/revenue_retention_presentation_files/juanitorduz.png){.absolute top=0 right=0 width=600 height=600}